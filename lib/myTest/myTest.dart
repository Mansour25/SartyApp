import 'package:flutter/material.dart';class MyTest extends StatelessWidget {  const MyTest({super.key});  @override  Widget build(BuildContext context) {    return Scaffold(      body: SafeArea(        child: Stack(          children: [            ClipPath(              clipper: CustomClipPath2(),              child: Container(                color: Colors.red,                width: double.infinity,                height: MediaQuery.of(context).size.height * 0.6,              ),            ),            ClipPath(              clipper: CustomClipPath(),              child: Container(                color: Colors.blue,                width: double.infinity,                height: MediaQuery.of(context).size.height * 0.6,              ),            ),          ],        ),      ),    );  }}class CustomClipPath extends CustomClipper<Path> {  @override  Path getClip(Size size) {    var path = Path();    path.lineTo(0, size.height-50);    path.quadraticBezierTo(      size.width *0.25,      size.height - 140,      size.width * 0.5,      size.height-100,    );    path.quadraticBezierTo(      size.width * 0.8,      size.height-40,      size.width,      size.height - 150,    );    path.lineTo(size.width, 0);    // path.lineTo(size.width, 0);    path.close();    return path;  }  @override  bool shouldReclip(covariant CustomClipper<Path> oldClipper) {    return true;  }}class CustomClipPath2 extends CustomClipper<Path> {  @override  Path getClip(Size size) {    var path = Path();    path.lineTo(0, size.height);    path.lineTo(size.width*0.6, size.height);path.quadraticBezierTo(size.width*0.8-20, size.height-140, size.width, size.height-50);    // path.lineTo(size.width, size.height-50);    path.lineTo(size.width, 0);    // path.lineTo(size.width, 0);    path.close();    return path;  }  @override  bool shouldReclip(covariant CustomClipper<Path> oldClipper) {    return true;  }}