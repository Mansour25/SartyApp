import 'package:flutter/material.dart';import 'package:flutter_screenutil/flutter_screenutil.dart';import 'package:get/get.dart';import 'package:lottie/lottie.dart';import 'package:sarty_app/controller/greeting/choose_lang_controller.dart';class ForwardToOnBoarding extends StatelessWidget {  ChooseLangController logic;  ForwardToOnBoarding(this.logic);  @override  Widget build(BuildContext context) {    return logic.currentIndexLang != null        ? GestureDetector(            onTap: () {              logic.GoTo_onBoarding(context);            },            child: SizedBox(                width: 80.w,                height: 80.h,                child: CircleAvatar(                  backgroundColor: const Color(0xFFF9F9F9),                  // radius: 50.w,                  child: Center(                    child: Lottie.asset('assets/lottie/forward.json'),                  ),                )))        : const Spacer();  }}class CustomLogoLanguageScreen extends StatelessWidget {  const CustomLogoLanguageScreen({super.key});  @override  Widget build(BuildContext context) {    return SizedBox(      width: 122.w,      height: 134.h,      child: Stack(        children: [          Image.asset('assets/logo/border.png'),          Center(            child: SizedBox(              width: 75.w,              height: 83.h,              child: Image.asset('assets/logo/logo_lang.png'),            ),          ),        ],      ),    );  }}class CustomLanguageCard extends StatelessWidget {  int index;  CustomLanguageCard(this.index);  @override  Widget build(BuildContext context) {    return GetBuilder<ChooseLangController>(builder: (logic) {      bool isSelected = logic.currentIndexLang == index;      return GestureDetector(        onTap: () {          logic.change_lang(index);        },        child: Container(          margin: EdgeInsets.only(bottom: 24.h),          alignment: Alignment.center,          width: 363,          height: 70,          decoration: BoxDecoration(            color:                isSelected ? const Color(0xFFF9F9F9) : const Color(0xFFFFFFFF),            borderRadius: BorderRadius.circular(10),            border: Border.all(              color: const Color(0xFFCCCCCC),              width: 0.5,            ),          ),          child: Directionality(            textDirection: TextDirection.rtl,            child: ListTile(              title: Text(                index == 0 ? 'العربية' : 'الإنجليزية',                style: TextStyle(                  fontSize: 18.sp,                  fontFamily: 'Tajawal',                ),              ),              trailing: !isSelected                  ? const Icon(                      Icons.circle_outlined,                    )                  : const Icon(Icons.check_circle_outlined, color: Colors.blue),            ),          ),        ),      );    });  }}class FooterWidgetInChooseLang extends StatelessWidget {  const FooterWidgetInChooseLang({super.key});  @override  Widget build(BuildContext context) {    return const Align(        alignment: AlignmentDirectional.bottomCenter,        child: Text(          'يمكنك تغيير اللغة \nبأي وقت من الإعدادات',          style: TextStyle(            fontSize: 14,            fontWeight: FontWeight.w500,            fontFamily: 'Tajawal',          ),          textAlign: TextAlign.center,        ));  }}class CustomChooseAppLangText extends StatelessWidget {  const CustomChooseAppLangText({super.key});  @override  Widget build(BuildContext context) {    return Align(      alignment: AlignmentDirectional.centerEnd,      child: Padding(        padding: EdgeInsets.only(          right: 16.w,        ),        child: const Text(          'اختر لغة التطبيق',          style: TextStyle(            fontSize: 18,            fontWeight: FontWeight.w500,            fontFamily: 'Tajawal',          ),        ),      ),    );  }}