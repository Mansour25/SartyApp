import 'dart:math';import 'package:flutter/material.dart';import 'package:flutter_screenutil/flutter_screenutil.dart';import 'package:get/get.dart';import 'package:grouped_list/grouped_list.dart';import 'package:intl/intl.dart';import 'package:sarty_app/controller/chat/chat_controller.dart';class ChatScreen extends StatelessWidget {  @override  Widget build(BuildContext context) {    Get.put(ChatController());    return Scaffold(      body: SafeArea(        child: SingleChildScrollView(            child: GetBuilder<ChatController>(builder: (logic) {          return Column(            children: [              SizedBox(                height: MediaQuery.of(context).size.height - 130.h,                child: GroupedListView<MessageModel, DateTime>(                  physics: const BouncingScrollPhysics(),                  reverse: true,                  padding:                      const EdgeInsets.symmetric(horizontal: 12, vertical: 8),                  elements: logic.messages,                  groupBy: (element) => DateTime(                    element.date.hour,                    element.date.minute,                  ),                  groupHeaderBuilder: (element) {                    String timeStr =                        DateFormat.Hm().format(element.date).toString();                    print(timeStr);                    DateTime time = DateFormat.Hm().parse(timeStr);                    print(time);                    String formattedTime = DateFormat('h:mm a').format(time);                    return Center(                      child: Padding(                        padding: const EdgeInsets.symmetric(                          vertical: 10,                        ),                        child: Text(                          formattedTime,                          style: const TextStyle(                              color: Colors.grey,                              fontFamily: 'Tajawal',                              fontSize: 12),                        ),                      ),                    );                  },                  itemBuilder: (context, MessageModel message) {                    return Align(                      alignment: message.isSendMe                          ? Alignment.centerRight                          : Alignment.centerLeft,                      child: Padding(                        padding: const EdgeInsets.symmetric(                          vertical: 20,                        ),                        child: CustomMessageItem(                          message.text,                          message.isSendMe,                        ),                      ),                    );                  },                  // useStickyGroupSeparators: true,                  // optional                  // floatingHeader: true,                  // optional                  order: GroupedListOrder.DESC, // optional                ),              ),              CustomTextFieldMessage(logic),            ],          );        })),      ),    );  }}class MessageModel {  String text;  DateTime date;  bool isSendMe;  MessageModel(this.text, this.date, this.isSendMe);}class CustomMessageItem extends StatelessWidget {  String message;  bool isSendMe;  CustomMessageItem(this.message, this.isSendMe);  @override  Widget build(BuildContext context) {    Radius radius = const Radius.circular(20);    return Container(      decoration: BoxDecoration(        color: Colors.grey.withOpacity(0.3),        borderRadius: BorderRadius.only(          topLeft: isSendMe ? radius : const Radius.circular(0),          topRight: isSendMe ? const Radius.circular(0) : radius,          bottomLeft: radius,          bottomRight: radius,        ),      ),      child: Padding(        padding: const EdgeInsets.symmetric(          horizontal: 20,          vertical: 10,        ),        child: Text(          message,          style: const TextStyle(            fontFamily: 'Tajawal',          ),        ),      ),    );  }}class CustomTextFieldMessage extends StatelessWidget {  ChatController logic;  CustomTextFieldMessage(this.logic);  @override  Widget build(BuildContext context) {    return Padding(      padding: const EdgeInsets.all(8.0),      child: Card(        shape: RoundedRectangleBorder(          borderRadius: BorderRadius.circular(15),        ),        color: Colors.white70,        child: SizedBox(          width: double.infinity,          height: 60,          child: TextField(            onChanged: (val){                logic.update();            },            controller: logic.textEditingController,            cursorWidth: 2,            clipBehavior: Clip.antiAliasWithSaveLayer,            decoration: InputDecoration(              suffixIcon: GestureDetector(                onTap: () {                    logic.add_message();                },                child: Padding(                  padding: EdgeInsets.only(right: 20.h, top: 12.h),                  child: Text(                    'Send',                    style: TextStyle(                      fontSize: 16,                      color: logic.textEditingController.text.isNotEmpty                          ? Colors.blue                          : Colors.black,                      fontFamily: 'Tajawal',                      fontWeight: FontWeight.w500,                    ),                  ),                ),              ),              border: OutlineInputBorder(                borderRadius: BorderRadius.circular(10),              ),              enabledBorder: OutlineInputBorder(                borderRadius: BorderRadius.circular(10),                borderSide: BorderSide.none,              ),              focusedBorder: OutlineInputBorder(                borderRadius: BorderRadius.circular(10),                borderSide: BorderSide.none,              ),            ),          ),        ),      ),    );  }}