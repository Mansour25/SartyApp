import 'package:flutter/material.dart';import 'package:flutter_screenutil/flutter_screenutil.dart';import 'package:flutter_svg/flutter_svg.dart';import 'package:get/get.dart';import 'package:sarty_app/controller/create_verify_account_controller/create_account_controller.dart';import 'package:sarty_app/core/data/staticData.dart';import 'package:sarty_app/view/screens/on_boarding_screen/on_boarding_screen.dart';import 'package:sarty_app/view/widgets/constant.dart';class CreateAccountScreen extends StatefulWidget {  const CreateAccountScreen({super.key});  @override  State<CreateAccountScreen> createState() => _CreateAccountScreenState();}class _CreateAccountScreenState extends State<CreateAccountScreen> {  List<String> items = [    StaticData.on_boarding_data[0].img,    StaticData.on_boarding_data[1].img,  ];  int sected = 0;  changeSelected(newIndex) {    setState(() {      sected = newIndex;    });  }  @override  Widget build(BuildContext context) {    Get.put(CreateAccountController());    return Scaffold(      body: SingleChildScrollView(        child: Padding(          padding: EdgeInsets.only(            top: 96.h,            right: 64.w,            left: 77.w,          ),          child: GetBuilder<CreateAccountController>(builder: (logic) {          return Column(            children: [              const HeaderItemsInCreateAccountScreen(),              space_h(23.h),              const CustomTextFieldEmail(),              space_h(55.h),              CustomChooseMajor(logic),              space_h(121.h),              CustomButton('أرسل كود التحقق', () {                logic.GoTo_VerifyAccount(context);              }),            ],          );        }),        ),      ),    );  }} // // import 'package:flutter/material.dart'; // // class CreateAccountScreen extends StatelessWidget { //   const CreateAccountScreen({super.key}); // //   @override //   Widget build(BuildContext context) { //     return Scaffold( //       // backgroundColor: Colors.red, //       body: Stack( //         children: [ //           ClipPath( //             clipper: CurvedClipper(), //             child: Container( //               width: double.infinity, //               color: Colors.blue, //               child: Column( //                 mainAxisAlignment: MainAxisAlignment.center, //                 children: [ //                   Text( //                     'نص 1', //                     style: TextStyle(fontSize: 20, color: Colors.white), //                   ), //                   Text( //                     'نص 2', //                     style: TextStyle(fontSize: 20, color: Colors.white), //                   ), //                 ], //               ), //             ), //           ), //           Positioned( //               bottom: 0, //               left: 0, //               right: 0, //               child: ClipPath( //                   clipper: CurvedClipper2(), //                   child: Container( //                     height: MediaQuery.of(context).size.height * 1 / 3, //                     color: Colors.red, //                   ))), //         ], //       ), //     ); //   } // } // // class CurvedClipper extends CustomClipper<Path> { //   @override //   Path getClip(Size size) { //     print(size.height); //     print(size.width); // //     final path = Path(); //     final height = size.height; //     final width = size.width; // //     path.lineTo(0, -height / 2); //     path.lineTo(width, -height / 2); //     path.lineTo( //         width, height * 2 / 3); // يمكنك تعديل الثلثين العلويين حسب الحاجة //     path.quadraticBezierTo(width / 2, height / 2, 0, //         height * 2 / 3); // يمكنك تعديل الثلثين العلويين حسب الحاجة //     path.close(); // //     return path; //   } // //   @override //   bool shouldReclip(CustomClipper<Path> oldClipper) { //     return false; //   } // } // // class CurvedClipper2 extends CustomClipper<Path> { //   @override //   Path getClip(Size size) { //     print(size.height); //     print(size.width); // //     final path = Path(); //     final height = size.height; //     final width = size.width; // //     path.lineTo(0, height / 2 / 3); //     path.lineTo(width, height / 2 / 3); //     path.lineTo( //         width, height * 2 / 3); // يمكنك تعديل الثلثين العلويين حسب الحاجة //     path.quadraticBezierTo(width / 2, height / 2, 0, //         height * 2 / 3); // يمكنك تعديل الثلثين العلويين حسب الحاجة //     path.close(); // //     return path; //   } // //   @override //   bool shouldReclip(CustomClipper<Path> oldClipper) { //     return false; //   } // } // Column( // children: [ // GestureDetector( // onTap: () { // if (sected == 1) { // changeSelected(0); // } else { // changeSelected(1); // } // }, // child: AnimatedSwitcher( // duration: Duration(milliseconds: 800), // transitionBuilder: (Widget child, Animation<double> animation) { // return ScaleTransition(scale: animation, child: child); // }, // child: Container( // key: ValueKey<int>(sected), // height: 500, // decoration: BoxDecoration( // image: DecorationImage( // image: AssetImage(items[ // sected]))), // child: Image.asset(items[sected]), // ), // ), // ), // ], // ),class CustomChooseMajor extends StatelessWidget {  CreateAccountController logic;  CustomChooseMajor(this.logic);  @override  Widget build(BuildContext context) {    return SizedBox(      width: 400,      height: 50,      child: ListView.builder(        reverse: true,        scrollDirection: Axis.horizontal,        itemCount: 3,        itemBuilder: (context, index) {          bool isSelect = logic.selected_item == index;          return GestureDetector(              onTap: () {                logic.change_selected(index);              },              child: Container(                padding: const EdgeInsets.only(right: 10),                margin: EdgeInsets.symmetric(                  horizontal: 10.w,                ),                // color: Colors.red,                width: 100.w,                height: 50.h,                child: Row(                  mainAxisAlignment: MainAxisAlignment.end,                  children: [                    Text(                      logic.majors[index],                      style: TextStyle(                          fontSize: 14.sp,                          fontFamily: 'Tajawal',                          color: Color(0xFF242424),                          fontWeight: FontWeight.w500),                    ),                    SizedBox(                      width: 8.w,                    ),                    isSelect                        ? SvgPicture.asset('assets/icons/select_icon.svg')                        : SvgPicture.asset('assets/icons/unselect_icon.svg'),                  ],                ),              ));        },      ),    );  }}class HeaderItemsInCreateAccountScreen extends StatelessWidget {  const HeaderItemsInCreateAccountScreen({super.key});  @override  Widget build(BuildContext context) {    return Column(      crossAxisAlignment: CrossAxisAlignment.end,      children: [        const Align(          alignment: Alignment.center,          child: Text(            ' إنشاء حساب',            style: TextStyle(              fontSize: 18,              fontFamily: 'Tajawal',              fontWeight: FontWeight.w500,            ),          ),        ),        space_h(127.h),        const Text(          ' 👋🏻  مرحبا بك',          style: TextStyle(            fontSize: 18,            fontFamily: 'Tajawal',            fontWeight: FontWeight.w500,          ),        ),        space_h(44.h),        const Text(          'أدخل البريد للتحقق',          style: TextStyle(            fontSize: 14,            fontFamily: 'Tajawal',            fontWeight: FontWeight.w500,          ),        ),      ],    );  }}class CustomTextFieldEmail extends StatelessWidget {  const CustomTextFieldEmail({super.key});  @override  Widget build(BuildContext context) {    return SizedBox(      width: 311.w,      height: 50.h,      child: TextFormField(        keyboardType: TextInputType.emailAddress,        style: const TextStyle(          fontFamily: 'Tajawal',        ),        decoration: InputDecoration(          focusedErrorBorder: OutlineInputBorder(              borderRadius: BorderRadius.circular(5),              borderSide: const BorderSide(                color: Color(0xFF0054D2),                width: 1,              )),          enabledBorder: OutlineInputBorder(              borderRadius: BorderRadius.circular(5),              borderSide: const BorderSide(                color: Color(0xFF0054D2),                width: 1,              )),          suffixIcon: Image.asset('assets/icons/icon_phone.png'),          border: OutlineInputBorder(            borderRadius: BorderRadius.circular(5),          ),          hintText: 'sarty@gmail.com',          // alignLabelWithHint: true,          hintTextDirection: TextDirection.rtl,          hintStyle: TextStyle(            color: const Color(0xFFC4C4C4),            fontSize: 14.sp,            fontFamily: 'Tajawal',            height: 0.8.h,          ),        ),      ),    );  }}